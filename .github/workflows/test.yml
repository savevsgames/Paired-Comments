name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile TypeScript
      run: npm run compile

    - name: Run unit tests
      run: npm run test:unit
      continue-on-error: false

    - name: Run integration tests
      run: npm run test:integration
      continue-on-error: false

    - name: Run E2E tests (Linux)
      if: runner.os == 'Linux'
      run: xvfb-run -a npm run test:e2e
      continue-on-error: false

    - name: Run E2E tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm run test:e2e
      continue-on-error: false

    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-paired-comments
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
      continue-on-error: true

  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    - run: npm ci
    - run: npm run compile
    - name: Check for TypeScript errors
      run: npx tsc --noEmit
