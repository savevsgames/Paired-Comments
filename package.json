{
  "name": "paired-comments",
  "displayName": "Paired Comments",
  "description": "Sidecar comment files with synchronized viewing - keep your code clean while maintaining rich annotations",
  "version": "2.0.6",
  "publisher": "paired-comments",
  "author": {
    "name": "Greg Barker"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/paired-comments"
  },
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "comments",
    "documentation",
    "annotations",
    "code-review",
    "productivity"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "paired-comments-json",
        "aliases": ["Paired Comments", "comments"],
        "extensions": [".comments"],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "./resources/comment-icon.svg",
          "dark": "./resources/comment-icon.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "paired-comments-json",
        "scopeName": "source.json.comments",
        "path": "./syntaxes/comments.tmLanguage.json"
      }
    ],
    "configuration": {
      "title": "Paired Comments",
      "properties": {
        "pairedComments.defaultAuthor": {
          "type": "string",
          "default": "Unknown",
          "description": "Default author name for new comments"
        },
        "pairedComments.hideCommentFiles": {
          "type": "boolean",
          "default": true,
          "description": "Hide .comments files in the file explorer"
        },
        "pairedComments.showFileBadges": {
          "type": "boolean",
          "default": true,
          "description": "Show comment count badges on files in explorer"
        }
      }
    },
    "commands": [
      {
        "command": "pairedComments.showMenu",
        "title": "Paired Comments: Show Menu",
        "category": "Paired Comments",
        "icon": "$(menu)"
      },
      {
        "command": "pairedComments.open",
        "title": "Paired Comments: Open",
        "category": "Paired Comments",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "pairedComments.addComment",
        "title": "Paired Comments: Add Comment (Smart Add - Reserved for v2.0.7+)",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.addSingleComment",
        "title": "Paired Comments: Add Single-Line Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.addRangeComment",
        "title": "Paired Comments: Add Range Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.editComment",
        "title": "Paired Comments: Edit Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.deleteComment",
        "title": "Paired Comments: Delete Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.toggleSync",
        "title": "Paired Comments: Toggle Scroll Sync",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.showAllComments",
        "title": "Paired Comments: Show All Comments",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.copyAllComments",
        "title": "Paired Comments: Copy All Comments",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.exportComments",
        "title": "Paired Comments: Export Comments",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.importComments",
        "title": "Paired Comments: Import Comments",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.findInComments",
        "title": "Paired Comments: Find in Comments",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.nextComment",
        "title": "Paired Comments: Next Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.previousComment",
        "title": "Paired Comments: Previous Comment",
        "category": "Paired Comments"
      },
      {
        "command": "pairedComments.toggleCommentFilesVisibility",
        "title": "Paired Comments: Toggle .comments Files Visibility",
        "category": "Paired Comments"
      }
    ],
    "keybindings": [
      {
        "command": "pairedComments.showMenu",
        "key": "ctrl+alt+p ctrl+alt+p",
        "mac": "cmd+alt+p cmd+alt+p",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.open",
        "key": "ctrl+alt+p o",
        "mac": "cmd+alt+p o",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.addComment",
        "key": "ctrl+alt+p a",
        "mac": "cmd+alt+p a",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.addSingleComment",
        "key": "ctrl+alt+p s",
        "mac": "cmd+alt+p s",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.addRangeComment",
        "key": "ctrl+alt+p r",
        "mac": "cmd+alt+p r",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.editComment",
        "key": "ctrl+alt+p e",
        "mac": "cmd+alt+p e",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.deleteComment",
        "key": "ctrl+alt+p d",
        "mac": "cmd+alt+p d",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.showAllComments",
        "key": "ctrl+alt+p l",
        "mac": "cmd+alt+p l",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.toggleSync",
        "key": "ctrl+alt+p t",
        "mac": "cmd+alt+p t",
        "when": "pairedComments.viewOpen"
      },
      {
        "command": "pairedComments.copyAllComments",
        "key": "ctrl+alt+p c",
        "mac": "cmd+alt+p c",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.exportComments",
        "key": "ctrl+alt+p x",
        "mac": "cmd+alt+p x",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.importComments",
        "key": "ctrl+alt+p i",
        "mac": "cmd+alt+p i",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.findInComments",
        "key": "ctrl+alt+p f",
        "mac": "cmd+alt+p f",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.nextComment",
        "key": "ctrl+alt+p n",
        "mac": "cmd+alt+p n",
        "when": "editorTextFocus"
      },
      {
        "command": "pairedComments.previousComment",
        "key": "ctrl+alt+p b",
        "mac": "cmd+alt+p b",
        "when": "editorTextFocus"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "pairedComments.open",
          "group": "pairedComments@1",
          "when": "editorTextFocus"
        },
        {
          "command": "pairedComments.addComment",
          "group": "pairedComments@2",
          "when": "editorTextFocus"
        },
        {
          "command": "pairedComments.editComment",
          "group": "pairedComments@3",
          "when": "pairedComments.lineHasComment"
        },
        {
          "command": "pairedComments.deleteComment",
          "group": "pairedComments@4",
          "when": "pairedComments.lineHasComment"
        }
      ],
      "commandPalette": [
        {
          "command": "pairedComments.open",
          "when": "editorIsOpen"
        },
        {
          "command": "pairedComments.addComment",
          "when": "editorIsOpen"
        },
        {
          "command": "pairedComments.editComment",
          "when": "pairedComments.lineHasComment"
        },
        {
          "command": "pairedComments.deleteComment",
          "when": "pairedComments.lineHasComment"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "compile:tests": "tsc -p ./test",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run compile:tests && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "format": "prettier --write \"src/**/*.ts\" \"tests/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"tests/**/*.ts\"",
    "test": "npm run test:unit && npm run test:e2e",
    "test:unit": "mocha --require ts-node/register 'test/unit/**/*.test.ts'",
    "test:integration": "mocha --require ts-node/register 'test/integration/**/*.test.ts'",
    "test:e2e": "npm run compile && npm run compile:tests && node ./out/test/runTest.js",
    "test:watch": "mocha --require ts-node/register --watch 'test/unit/**/*.test.ts'",
    "test:coverage": "nyc npm run test:unit",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "package": "vsce package",
    "clean": "rimraf out coverage .nyc_output"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/chai": "^4.3.11",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.10.0",
    "@types/sinon": "^17.0.2",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^2.22.0",
    "@vitest/coverage-v8": "^1.0.4",
    "chai": "^4.3.10",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.1.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "sinon": "^17.0.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "vitest": "^1.0.4"
  },
  "dependencies": {}
}
